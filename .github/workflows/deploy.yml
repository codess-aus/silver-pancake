name: Deploy to Azure Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: silver-pancake
  AZURE_STATICWEBAPP_NAME: meme-generator-frontend
  NODE_VERSION: '18.x'
  PYTHON_VERSION: '3.12'

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set production API URL
        if: github.ref == 'refs/heads/main'
        run: |
          echo "REACT_APP_API_URL=https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net" >> $GITHUB_ENV
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Build frontend
        working-directory: ./frontend
        env:
          REACT_APP_API_URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net
        run: npm run build
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/

  deploy-frontend:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: ./build
      
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_JOLLY_WAVE_0222A6F03 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "./build"
          skip_app_build: true

  # Backend is already deployed via az webapp up and doesn't need redeployment
  # deploy-backend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     
  #     - name: Setup Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}
  #     
  #     - name: Install dependencies
  #       working-directory: ./backend
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #     
  #     - name: Deploy to Azure Web App
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ env.AZURE_WEBAPP_NAME }}
  #         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
  #         package: ./backend

  verify-deployment:
    needs: [deploy-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Check backend health
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health)
          if [ $response -eq 200 ]; then
            echo "✅ Backend health check passed"
          else
            echo "❌ Backend health check failed with status $response"
            exit 1
          fi
      
      - name: Test image generation
        run: |
          response=$(curl -s -X POST \
            https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/api/generate-visual-meme \
            -H "Content-Type: application/json" \
            -d '{"topic":"deployment test","mood":"funny"}' \
            -w "%{http_code}")
          echo "Response: $response"
          if [[ $response == *"200"* ]] || [[ $response == *"Visual meme generated"* ]]; then
            echo "✅ Image generation test passed"
          else
            echo "❌ Image generation test failed"
            exit 1
          fi
